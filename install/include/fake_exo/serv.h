// Generated by gencpp from file fake_exo/serv.msg
// DO NOT EDIT!


#ifndef FAKE_EXO_MESSAGE_SERV_H
#define FAKE_EXO_MESSAGE_SERV_H

#include <ros/service_traits.h>


#include <fake_exo/servRequest.h>
#include <fake_exo/servResponse.h>


namespace fake_exo
{

struct serv
{

typedef servRequest Request;
typedef servResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct serv
} // namespace fake_exo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::fake_exo::serv > {
  static const char* value()
  {
    return "62d2895a600383a28702b76d8606b327";
  }

  static const char* value(const ::fake_exo::serv&) { return value(); }
};

template<>
struct DataType< ::fake_exo::serv > {
  static const char* value()
  {
    return "fake_exo/serv";
  }

  static const char* value(const ::fake_exo::serv&) { return value(); }
};


// service_traits::MD5Sum< ::fake_exo::servRequest> should match
// service_traits::MD5Sum< ::fake_exo::serv >
template<>
struct MD5Sum< ::fake_exo::servRequest>
{
  static const char* value()
  {
    return MD5Sum< ::fake_exo::serv >::value();
  }
  static const char* value(const ::fake_exo::servRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::fake_exo::servRequest> should match
// service_traits::DataType< ::fake_exo::serv >
template<>
struct DataType< ::fake_exo::servRequest>
{
  static const char* value()
  {
    return DataType< ::fake_exo::serv >::value();
  }
  static const char* value(const ::fake_exo::servRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::fake_exo::servResponse> should match
// service_traits::MD5Sum< ::fake_exo::serv >
template<>
struct MD5Sum< ::fake_exo::servResponse>
{
  static const char* value()
  {
    return MD5Sum< ::fake_exo::serv >::value();
  }
  static const char* value(const ::fake_exo::servResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::fake_exo::servResponse> should match
// service_traits::DataType< ::fake_exo::serv >
template<>
struct DataType< ::fake_exo::servResponse>
{
  static const char* value()
  {
    return DataType< ::fake_exo::serv >::value();
  }
  static const char* value(const ::fake_exo::servResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FAKE_EXO_MESSAGE_SERV_H
